0ms

int longestPalindrome(string s) {
        if (s.length() < 2) return 1;
        
        int counts[52] = {0};
        for (char c : s) {
            if (int(c) > 64 && int(c) < 91) counts[c - 'A']++;
            else if (int(c) > 96 && int(c) < 123) counts[c - 'a' + 26]++;
        }

        int res = 0;
        bool mid_found = false;

        for (int i=0; i<52; i++) {
            if (counts[i] % 2 == 0) res += counts[i];
            else if (counts[i] % 2 == 1 && !mid_found) {
                mid_found = true;
                res += counts[i];
            } 
            else if (counts[i] % 2 == 1 && mid_found) {
                res += (counts[i] - 1);
            }
        }

        return res;
    }