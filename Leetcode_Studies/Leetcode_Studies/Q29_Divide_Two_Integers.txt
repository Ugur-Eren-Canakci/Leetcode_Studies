1355 ms with looooong subtraction operations

int divide(int dividend, int divisor) {
        if (dividend == 0) return 0;
        if (divisor == 1) return dividend;
        if (divisor == -1 && dividend > 0) return -1*dividend;
        if (divisor == -1 && dividend < 0) {
            if (dividend == -1*pow(2,31)) return pow(2,31)-1;
            else return -1*dividend;
        }
        if (dividend == divisor) return 1;
        
        int quotient = 0;
        if (dividend > 0 && divisor > 0 ) {
            while (dividend - divisor >= 0) {
            dividend -= divisor;
            quotient += 1;
            }
        }
        else if (dividend > 0 && divisor < 0) {
            while (dividend + divisor >= 0) {
                dividend += divisor;
                quotient -= 1;
            }
        }
        else if (dividend < 0 && divisor > 0) {
            while (dividend + divisor <= 0) {
                dividend += divisor;
                quotient -= 1;
            }
        }
        else {
            while (dividend - divisor <= 0) {
                dividend -= divisor;
                quotient += 1;
            }
        }

        return quotient;
    }