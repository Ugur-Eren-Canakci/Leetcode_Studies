0ms

vector<string> generateParenthesis(int n) {
        if (n == 0) return {};
        vector<string> res;
        set<string> uniques;
        
        string s{""};
        for (int i=0; i<n; i++) s += "(";
        for (int i=0; i<n; i++) s += ")"; 
        uniques.insert(s);

        while (std::next_permutation(s.begin(), s.end())) {
            // count lefts and rights
            int count = 0;
            for (const auto& el : s) {
                if (el == '(') count++;
                else count--;
                if (count < 0) break; 
            }

            if (count == 0) uniques.insert(s);
        }
        
        for (const auto& el : uniques) res.push_back(el);

        return res;
    }