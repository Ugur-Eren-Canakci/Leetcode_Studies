0ms

vector<int> searchRange(vector<int>& nums, int target) {
        
        if (nums.empty()) return {-1,-1};
        if (nums.size() == 1) {
            if (nums[0] == target) return {0,0};
            else return {-1,-1};
        }
        if (nums.size() == 2) {
            if (nums[0] == target && nums[1] == target) return {0,1};
            else if (nums[0] == target && nums[1] != target) return {0,0};
            else if (nums[0] != target && nums[1] == target) return {1,1};
            else return {-1,-1};
        }
        if (nums[0] == target && nums[1] > target) return {0,0};
        if (nums[nums.size()-1] == target && nums[nums.size()-2] < target) return {int(nums.size()-1),int(nums.size()-1)};
        
        int left = 0, right = nums.size() - 1;
        int mid = (left + right)/2;
        while (left <= right) {
            mid = (left + right)/2;
            if (target == nums[mid]) break;
            if (target < nums[mid]) right = mid - 1;
            else if (target > nums[mid]) left = mid + 1;
        }

        if (nums[mid] == target) {
            std::cout << mid << std::endl;
            int left_pos = mid, right_pos = mid;
            while (left_pos > 0) {
                if (nums[left_pos-1] == target) {
                    left_pos--;
                }
                else break;
            }
            while (right_pos < nums.size()-1) {
                if (nums[right_pos+1] == target) {
                    right_pos++;
                }
                else break;
            } 
            return {left_pos,right_pos};
        }

        return {-1,-1};
    }